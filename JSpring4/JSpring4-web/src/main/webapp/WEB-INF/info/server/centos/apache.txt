--------------------------- apache

# ./configure --prefix=/usr/local/apache --enable-module=so --enable-so --enable-rewrite

# make ; make install


---------------------------  mod_jk

# cd native

# ./configure --with-apxs=/usr/local/apache/bin/apxs

# make ; make install



------------------------- workers.properties -------------------------
worker.list=ajp13 
worker.ajp13.port=8009 
worker.ajp13.host=localhost 
worker.ajp13.type=ajp13 
worker.ajp13.lbfactor=1 
---------------------------------------------------------------------
 
------------------------- http.conf -----------------------------------
LoadModule jk_module    modules/mod_jk.so

JkWorkersFile /usr/local/apache/conf/workers.properties 


JkMount /*.jsp ajp13
JkMount /servlet/ ajp13


cf) 반대로 한다면 ??
<VirtualHost *:80>

SetEnvIf Request_URI "/static/*" no-jk
SetEnvIf Request_URI "/js/*" no-jk
JkMount /* ajp13
</VirtualHost>



---------------------------  cronolog
# cd /usr/local/src
# wget http://cronolog.org/download/cronolog-1.6.2.tar.gz
# tar xvfz cronolog-1.6.2.tar.gz
# cd cronolog-1.6.2
# ./configure
# make;make install


---------------------------  tomcat.sh
#!/bin/sh
#chkconfig: 35 81 80
#description: tomcat 7.X

# Set some variables
MYSELF=`basename $0`

case "$1" in
        start)
        echo -n ' '
        su - tomcat -c "exec /usr/local/tomcat7/bin/catalina.sh start" >/dev/null 2>&1 ; echo 'tomcat7 start'
        ;;
        stop)
        echo -n ' '
        su - tomcat -c "exec /usr/local/tomcat7/bin/catalina.sh stop" >/dev/null 2>&1 ; echo 'tomcat7 stop'
        ;;
        *)
        echo ""
        echo "Usage: ${MYSELF} { start | stop }"
        echo ""
        exit 64
        ;;
esac


# 아래처럼 ConsoleHandler만 남겨두면 모든 로그를 Standard Out으로만 찍는다.
----------------------------------------------------------
handlers = java.util.logging.ConsoleHandler
.handlers = java.util.logging.ConsoleHandler
 
java.util.logging.ConsoleHandler.level = FINE
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter.
--------------------------- 



---------------------------------------------------------------------------------- webalizer

# yum install zlib-devel libpng-devel gd-devel
 
http://www.webalizer.org/download.html
 

# wget ftp://ftp.mrunix.net/pub/webalizer/webalizer-2.23-05-src.tgz
 
 
# ./configure --prefix=/usr/local/webalizer -with-language=korean
 
# make; make install
 
#   cp /usr/local/webalizer/etc/webalizer.conf.sample 도메인.com.conf
 
 
LogFile			분석할 로그파일 위치
OutputDir			분석결과 저장위치
HistoryName		stockholic.hist
Incremental			yes
IncrementalName		stockholic.current
HostName			www.stockholic.kr
  
 
-------------------------------
#!/bin/bash
#usage: webalizer [option] [log file]
date = `date -d "1 days ago" +%Y/%m/%d`
/usr/local/webalizer/bin/webalizer -c /usr/local/webalizer/etc/www.stockholic.kr.conf /usr/local/apache/logs/$date/www.stockholic.kr-access_log
-------------------------------



---------------------------------------------------------------------------------- svn
1. mod_dav_svn 설치 (Apache와 svn을 연동 모듈 설치)
# yum install mod_dav_svn.x86_64

l2. ibrary 파일 복사
# cp /usr/lib64/httpd/modules/*svn* /usr/local/apache/modules/

3. 사용자 파일 생성(사용자 추가)
# /usr/local/apache/bin/htpasswd -c /usr/local/subversion/.passwd merong # -- 최조 생성이라 -c 옵션을 줌. 이후에는 -c 옵션 없이 생성

4. 권한 설정 디렉토리 권한 설정을 apache로 한다.

# chown -R apache:apache /usr/local/subversion/zchat

# chmod -R 770 /usr/local/subversion/zchat

5. svn 환경 설정
# vi /usr/local/apache/conf/extra/httpd-subversion.conf

-------------------------------------------------------------------
<Location />
        DAV svn
        SVNParentPath /usr/local/subversion
        AuthType Basic
        AuthName "Subversion Repository"
        AuthUserFile /usr/local/subversion/.passwd
        Require valid-user
        AuthzSVNAccessFile /usr/local/subversion/authz
</Location>


-------------------------------------------------------------------

SVNParentPath: Root Repository 경로
AuthzSVNAccessFile: authz 파일 경로(옵션)
AuthType: Basic으로 설정하면 htpasswd 파일을 사용한다는 의미
AuthName: 웹 브라우저, Subversion 클라이언트에서 접속했을 때 표시되는 저장소 이름
AuthUserFile: htpasswd 파일의 경로
Requre: 로그인한 사용자만 볼 수 있도록 valid-user로 설정
LimitXMLRequestBody : 50M 제한,	0:제한없음


Error : 
svn: Unexpected HTTP status 413 'Request Entity Too Large'
	htttp.conf 에 추가		<-- 버그픽스된듯 안해도 됨
		LimitRequestBody 0
	nginx.conf 에 추가
		client_max_body_size 100M;


6. svnaccess 파일 생성(파일권한)
# vi /usr/local/subversion/authz

-------------------------------------------------------------------
#[groups]
#grp_W = a, b, c, g
#grp_X = a, d, f, e
#grp_Y = a, e,

#[ProjectPot:/]
#@grp_W = rw

#[ProjectKettle:/]
#@grp_X = rw

#[/]
#* =
#@grp_Y = rw

#----------------------------------------------
[groups]
zchat = merong

#[zchat:/]
#@zchat = rw
-------------------------------------------------------------------

7. httpd.conf 설정
# vi http.conf

AddDefaultCharset UTF-8													<-- 추가

LoadModule dav_module modules/mod_dav.so						<-- 주석 제거
LoadModule dav_svn_module	modules/mod_dav_svn.so			<-- 추가
LoadModule authz_svn_module	modules/mod_authz_svn.so	<-- 추가

Include conf/extra/httpd-subversion.conf
